---
- hosts: all
  become: true
  tasks:
    #- name: Update packages list
      #become: yes
      #apt: update_cache=yes
      #when: ansible_os_family == 'Debian'

    #- name: Upgrade packages
      #become: yes
      #apt: upgrade=safe
      #when: ansible_os_family == 'Debian'
    - name: Install required packages
      become: yes
      apt:
        name:
          - python3.7
          - libldap2-dev
          - libsasl2-dev
          - libssl1.0-dev
          - python3-pip
          - git
          - python3-dateutil
          - ttf-bitstream-vera
          - redis-server
          - npm
          - python3.7-dev
        state: present
        update_cache: true
  
- hosts: all
  become: true
  vars_files:
    - vars/custom.yml
    - vars/main.yml

  roles:
    - geerlingguy.postgresql
    - nginxinc.nginx
    - geerlingguy.supervisor

- hosts: all
  vars_files:
    - vars/custom.yml
    - vars/main.yml

  handlers:
      - name: restart supervisor
        become: yes
        service:
          name: supervisord
          state: restarted

  tasks:
    - name: Install extension for future db
      shell: "psql -d 'template1' -c \"CREATE EXTENSION IF NOT EXISTS unaccent;\""
      become: yes
      become_user: postgres

    - name: Install extension for current db
      shell: "psql -d 'happyschool' -c \"CREATE EXTENSION IF NOT EXISTS unaccent;\""
      become: yes
      become_user: postgres

    - name: Get HappySchool
      git:
        repo: "https://github.com/ISLNamur/happyschool"
        dest: "{{ happyschool_home }}"

    - pip:
        name: pipenv
        executable: pip3
        extra_args: --user
  
    - name: Run a pipenv install
      command: "~/.local/bin/pipenv install"
      args:
          chdir: "{{ happyschool_home }}"

    - name: Install npm packages
      npm:
        path: "{{ happyschool_home }}"

    - name: write the happyschool config file
      template:
        src: templates/settings.py.j2
        dest: "{{ happyschool_home }}/happyschool/settings.py"

    - name: Create and update database tables
      command: "~/.local/bin/pipenv run ./manage.py migrate"
      args:
          chdir: "{{ happyschool_home }}"

    - name: Collect static files
      command: "~/.local/bin/pipenv run ./manage.py collectstatic --noinput"
      args:
        chdir: "{{ happyschool_home }}"

    - name: Build js bundles
      command: "./node_modules/.bin/webpack --config webpack.prod.js"
      args:
        chdir: "{{ happyschool_home }}"
      notify: "restart supervisor"
  
    - name: Check if superuser is created
      command: '~/.local/bin/pipenv run ./manage.py shell --command="from django.contrib.auth.models import User; print(User.objects.filter(is_superuser=True).count())"'
      args:
        chdir: "{{ happyschool_home }}"
      register: is_superuser

    - name: Create superuser
      command: "~/.local/bin/pipenv run ./manage.py shell -c \"from django.contrib.auth.models import User; User.objects.create_superuser('{{ happyschool_admin }}', '', '{{ happyschool_password }}')\""
      args:
        chdir: "{{ happyschool_home }}"
      when: "'0' == is_superuser.stdout"

    - name: Create groups
      command: "~/.local/bin/pipenv run ./manage.py creategroups"
      args:
        chdir: "{{ happyschool_home }}"
...
